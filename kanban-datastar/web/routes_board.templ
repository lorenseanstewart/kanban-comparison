package web

import "fmt"

templ BoardPage(boardDetails Board, users []User, tags []Tag) {
	@BasePage(boardDetails.Title + " | Kanban Board") {
		@BoardDetails(boardDetails, users, tags)
	}
}

templ BoardDetails(boardDetails Board, users []User, tags []Tag) {
	<div style="display: contents">
		<div class="min-h-screen bg-base-200">
			<div class="min-h-screen bg-base-300 text-base-content p-4 md:p-8">
				<main class="w-full p-8 space-y-10 rounded-[2.5rem] bg-base-100 dark:bg-base-200 shadow-xl">
					<div class="breadcrumbs text-sm">
						<ul>
							<li>
								<a href="/" class="link link-hover">Boards</a>
							</li>
							<li>
								<span class="text-base-content/60">{ boardDetails.Title }</span>
							</li>
						</ul>
					</div>
					<div class="space-y-8">
						@BoardOverview(boardDetails)
						<div class="card-actions">
							<button class="btn btn-primary" onclick="addCardModal.showModal()">
								Add Card
							</button>
						</div>
						@BoardCardsSection(boardDetails, users)
					</div>
					<dialog id="addCardModal" class="modal">
						<div class="modal-box bg-base-200 dark:bg-base-300">
							<button type="button" class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2" onclick="addCardModal.close()">
								✕
							</button>
							<form
								method="POST"
								data-on:submit={ fmt.Sprintf("@post('/board/%s/card', {contentType: 'form'}); addCardModal.close()", boardDetails.ID) }
							>
								<h3 class="font-bold text-lg mb-4">Add New Card</h3>
								<div class="form-control w-full mb-4">
									<label class="label" for="card-title">
										<span class="label-text">Title</span>
									</label>
									<input
										id="card-title"
										name="title"
										type="text"
										class="input input-bordered w-full"
										placeholder="Enter card title"
										required
									/>
								</div>
								<div class="form-control w-full mb-4">
									<label class="label" for="card-description">
										<span class="label-text">Description</span>
									</label>
									<textarea
										id="card-description"
										name="description"
										class="textarea textarea-bordered h-24 w-full"
										placeholder="Enter card description (optional)"
									></textarea>
								</div>
								<div class="form-control w-full mb-4">
									<label class="label" for="card-assignee">
										<span class="label-text">Assignee</span>
									</label>
									<select
										id="card-assignee"
										name="assigneeId"
										class="select select-bordered w-full"
									>
										<option value="">Unassigned</option>
										for _, user := range users {
											<option value={ user.Id }>{ user.Name }</option>
										}
									</select>
								</div>
								<div class="form-control w-full mb-4">
									<div class="label">
										<span class="label-text">Tags</span>
									</div>
									<div class="flex flex-wrap gap-2 p-4 border border-base-300 rounded-lg">
										for _, tag := range tags {
											<label
												class="tag-checkbox-label badge border-2 font-semibold cursor-pointer transition-all hover:scale-105"
												style={ fmt.Sprintf("--tag-color: %s; color: %s; border-color: %s;", tag.Color, tag.Color, tag.Color) }
											>
												<input
													type="checkbox"
													name="tagIds"
													value={ tag.ID }
													class="hidden"
												/>
												<span>{ tag.Name }</span>
											</label>
										}
									</div>
								</div>
								<div class="modal-action">
									<button type="button" class="btn btn-ghost" onclick="addCardModal.close()">
										Cancel
									</button>
									<button type="submit" class="btn btn-primary">
										Add Card
									</button>
								</div>
							</form>
						</div>
					</dialog>
					<style>
						.tag-checkbox-label:has(input:checked) {
							background-color: var(--tag-color) !important;
							color: white !important;
						}
					</style>
					<dialog id="editCardModal" class="modal">
						<div class="modal-box bg-base-200 dark:bg-base-300">
							<button type="button" class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2" onclick="editCardModal.close()">
								✕
							</button>
							<h3 class="font-bold text-lg mb-4">Edit Card</h3>
							<form
								method="POST"
								data-on:submit={ fmt.Sprintf("@post('/board/%s/card/' + $cardId, {contentType: 'form'}); editCardModal.close()", boardDetails.ID) }
							>
								<div class="form-control w-full mb-4">
									<label class="label" for="edit-card-title">
										<span class="label-text">Title</span>
									</label>
									<input
										id="edit-card-title"
										name="title"
										type="text"
										class="input input-bordered w-full"
										placeholder="Enter card title"
										data-bind="editTitle"
										required
									/>
								</div>
								<div class="form-control w-full mb-4">
									<label class="label" for="edit-card-description">
										<span class="label-text">Description</span>
									</label>
									<textarea
										id="edit-card-description"
										name="description"
										class="textarea textarea-bordered h-24 w-full"
										placeholder="Enter card description (optional)"
										data-bind="editDescription"
									></textarea>
								</div>
								<div class="form-control w-full mb-4">
									<label class="label" for="edit-card-assignee">
										<span class="label-text">Assignee</span>
									</label>
									<select
										id="edit-card-assignee"
										name="assigneeId"
										class="select select-bordered w-full"
										data-bind="editAssigneeId"
									>
										<option value="">Unassigned</option>
										for _, user := range users {
											<option value={ user.Id }>{ user.Name }</option>
										}
									</select>
								</div>
								<div class="form-control w-full mb-4">
									<div class="label">
										<span class="label-text">Tags</span>
									</div>
									<div class="flex flex-wrap gap-2 p-4 border border-base-300 rounded-lg">
										for _, tag := range tags {
											<label
												class="tag-checkbox-label badge border-2 font-semibold cursor-pointer transition-all hover:scale-105"
												style={ fmt.Sprintf("--tag-color: %s; color: %s; border-color: %s;", tag.Color, tag.Color, tag.Color) }
											>
												<input
													type="checkbox"
													name="tagIds"
													value={ tag.ID }
													class="hidden"
												/>
												<span>{ tag.Name }</span>
											</label>
										}
									</div>
								</div>
								<div class="modal-action justify-between">
									<button
										type="button"
										class="btn btn-error"
										data-on:click={ fmt.Sprintf("if(confirm('Are you sure you want to delete this card?')) { @delete('/board/%s/card/' + $cardId); editCardModal.close() }", boardDetails.ID) }
									>
										Delete Card
									</button>
									<div class="flex gap-2">
										<button type="button" class="btn btn-ghost" onclick="editCardModal.close()">
											Cancel
										</button>
										<button type="submit" class="btn btn-primary">
											Save Changes
										</button>
									</div>
								</div>
							</form>
						</div>
					</dialog>
					<dialog id="addCommentModal" class="modal">
						<div class="modal-box bg-base-200 dark:bg-base-300 max-w-2xl">
							<button type="button" class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2" onclick="addCommentModal.close()">
								✕
							</button>
							<h3 class="font-bold text-lg mb-4">Add Comment</h3>
							<form
								method="POST"
								data-on:submit={ fmt.Sprintf("@post('/board/%s/card/' + $cardId + '/comment', {contentType: 'form'}); addCommentModal.close()", boardDetails.ID) }
							>
								<div class="form-control w-full mb-4">
									<label class="label" for="comment-user">
										<span class="label-text">Comment as</span>
									</label>
									<select
										id="comment-user"
										name="userId"
										class="select select-bordered w-full"
										required
									>
										for _, user := range users {
											<option value={ user.Id }>{ user.Name }</option>
										}
									</select>
								</div>
								<div class="form-control w-full mb-4">
									<label class="label" for="comment-text">
										<span class="label-text">Your comment</span>
									</label>
									<textarea
										id="comment-text"
										name="text"
										class="textarea textarea-bordered h-24 w-full"
										placeholder="Write your comment..."
										required
									></textarea>
								</div>
								<div class="modal-action">
									<button type="button" class="btn btn-ghost" onclick="addCommentModal.close()">
										Cancel
									</button>
									<button type="submit" class="btn btn-primary">
										Add Comment
									</button>
								</div>
							</form>
						</div>
					</dialog>
				</main>
			</div>
		</div>
	</div>
	@DropScript()
}

templ BoardOverview(board Board) {
	<section class="bg-base-200 dark:bg-base-300 shadow-xl rounded-3xl p-8 space-y-6">
		<div class="space-y-3">
			<div class="badge badge-secondary badge-outline">Board overview</div>
			<h1 class="text-4xl font-black text-primary">{ board.Title }</h1>
			if board.Description != "" {
				<p class="text-base text-base-content/60 max-w-2xl">
					{ board.Description }
				</p>
			}
		</div>
		<div class="grid grid-cols-1 md:grid-cols-2 gap-12 md:gap-6 max-w-[1190px] mx-auto items-start">
			@BarChart(getChartData(board.Lists), getPastelColors(), "Cards per List")
			@PieChart(getChartData(board.Lists), getPastelColors(), "Distribution")
		</div>
	</section>
}

templ BoardCardsSection(board Board, users []User) {
	<section id="boardCardsSection" class="flex gap-7 overflow-x-auto pb-8">
		if len(board.Lists) == 0 {
			<div class="card bg-base-200 dark:bg-base-300 shadow-xl w-full max-w-md mx-auto">
				<div class="card-body items-center text-center">
					<h2 class="card-title text-secondary">No lists yet</h2>
					<p class="text-base-content/60">
						Add a list to begin organizing work on this board.
					</p>
				</div>
			</div>
		} else {
			for _, list := range board.Lists {
				@CardList(list, board.ID, users)
			}
		}
	</section>
}

func getChartData(lists []ListWithCards) []ChartData {
	data := make([]ChartData, len(lists))
	for i, list := range lists {
		data[i] = ChartData{
			Label: list.Title,
			Value: len(list.Cards),
		}
	}
	return data
}

func getPastelColors() []string {
	return []string{"#fbbf24", "#f472b6", "#a78bfa", "#60a5fa"}
}
