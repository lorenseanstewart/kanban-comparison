---
import type { BoardDetails, UsersList } from '../lib/api';

interface Props {
  board: BoardDetails;
  users: UsersList;
}

const { board, users } = Astro.props;
---

<dialog id="comment-modal" class="modal">
  <div class="modal-box bg-base-200 dark:bg-base-300">
    <form method="dialog">
      <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">âœ•</button>
    </form>

    <h3 class="font-bold text-lg mb-4">Add Comment</h3>

    <!-- Existing Comments -->
    <div id="comments-list" class="space-y-3 mb-4 max-h-64 overflow-y-auto">
      <!-- Comments will be populated dynamically -->
    </div>

    <form
      id="comment-form"
      class="space-y-4"
      hx-post=""
      hx-target="#board-cards-section"
      hx-swap="outerHTML"
      hx-on::after-request="if(event.detail.successful) { document.getElementById('comment-modal').close(); this.reset(); }"
    >
      <input type="hidden" id="comment-card-id" name="cardId" value="" />
      <input type="hidden" id="comment-board-id" name="boardId" value={board.id} />

      <div class="form-control w-full">
        <label class="label">
          <span class="label-text">User</span>
        </label>
        <select name="userId" class="select select-bordered w-full" required>
          <option value="">Select user</option>
          {users.map((user) => (
            <option value={user.id}>{user.name}</option>
          ))}
        </select>
      </div>

      <div class="form-control w-full">
        <label class="label">
          <span class="label-text">Comment</span>
        </label>
        <textarea
          name="text"
          class="textarea textarea-bordered h-24 w-full"
          placeholder="Write your comment..."
          required
        ></textarea>
      </div>

      <div class="modal-action">
        <button type="button" class="btn btn-ghost" onclick="document.getElementById('comment-modal').close()">
          Cancel
        </button>
        <button type="submit" class="btn btn-primary">
          Add Comment
        </button>
      </div>
    </form>
  </div>
  <form method="dialog" class="modal-backdrop">
    <button>close</button>
  </form>
</dialog>

<script define:vars={{ board, users }}>
  // Global function to open comment modal
  window.openCommentModal = (cardId) => {
    // Find the card in the board data
    let card = null;
    for (const list of board.lists) {
      const found = list.cards.find(c => c.id === cardId);
      if (found) {
        card = found;
        break;
      }
    }

    if (!card) return;

    // Set the hx-post URL dynamically
    const form = document.getElementById('comment-form') as HTMLFormElement;
    form.setAttribute('hx-post', `/api/card-comment/${board.id}/${card.id}`);

    // Set card ID
    document.getElementById('comment-card-id').value = card.id;

    // Populate existing comments
    const commentsList = document.getElementById('comments-list');
    if (card.comments && card.comments.length > 0) {
      commentsList.innerHTML = card.comments.map(comment => {
        const user = users.find(u => u.id === comment.userId);
        const userName = user ? user.name : 'Unknown';
        const date = new Date(comment.createdAt).toLocaleDateString();

        return `
          <div class="bg-base-100 dark:bg-base-200 rounded-lg p-3 space-y-1">
            <div class="flex items-center gap-2 text-sm">
              <span class="font-semibold text-primary">${userName}</span>
              <span class="text-base-content/60">${date}</span>
            </div>
            <p class="text-sm text-base-content">${comment.text}</p>
          </div>
        `;
      }).join('');
    } else {
      commentsList.innerHTML = '<p class="text-sm text-base-content/60 text-center py-4">No comments yet</p>';
    }

    // Reinitialize HTMX for the form
    if (window.htmx) {
      window.htmx.process(form);
    }

    // Open modal
    document.getElementById('comment-modal').showModal();
  };
</script>
