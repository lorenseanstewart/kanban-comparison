---
import type { BoardDetails, UsersList } from "../lib/api";
import CardList from "./CardList.astro";

interface Props {
  board: BoardDetails;
  users: UsersList;
}

const { board, users } = Astro.props;
---

<section
  id="board-cards-section"
  class="flex gap-7 overflow-x-auto pb-8"
  data-board-id={board.id}
  hx-post={`/api/board/${board.id}/reorder`}
  hx-trigger="reorder, cardTransfer"
  hx-swap="outerHTML"
  hx-vals="js:{...window.kanban.getDragDropValues(event)}"
>
  {
    board.lists.length === 0 ? (
      <div class="card bg-base-200 dark:bg-base-300 shadow-xl w-full max-w-md mx-auto">
        <div class="card-body items-center text-center">
          <h2 class="card-title text-secondary">No lists yet</h2>
          <p class="text-base-content/60">
            Add a list to begin organizing work on this board.
          </p>
        </div>
      </div>
    ) : (
      board.lists.map((list) => (
        <CardList
          list={list}
          users={users}
          boardId={board.id}
        />
      ))
    )
  }
</section>

<script>
  import {
    getDragDropValues,
    initializeDragAndDrop,
    handleAfterSwap,
  } from "../lib/drag-and-drop";

  // Create global namespace for kanban functions
  window.kanban = window.kanban || ({} as any);

  // Attach functions to global namespace
  window.kanban.getDragDropValues = getDragDropValues;
  window.kanban.initializeDragAndDrop = initializeDragAndDrop;
  window.kanban.handleAfterSwap = handleAfterSwap;

  // Initialize on load
  function init() {
    if (document.readyState === "loading") {
      document.addEventListener(
        "DOMContentLoaded",
        window.kanban.initializeDragAndDrop
      );
    } else {
      window.kanban.initializeDragAndDrop();
    }

    // Listen for HTMX swaps on the body (persists across swaps)
    if (document.body) {
      document.body.addEventListener(
        "htmx:afterSwap",
        window.kanban.handleAfterSwap
      );
    } else {
      console.error("document.body not available!");
    }
  }

  init();
</script>
