---
interface Props {
  data: Array<{ label: string; value: number }>;
  colors: string[];
  title: string;
}

const { data, colors, title } = Astro.props;
const maxValue = Math.max(...data.map((item) => item.value), 1);
---

<div class="card bg-base-100 shadow-lg">
  <div class="card-body p-4">
    <h3 class="card-title text-sm text-base-content mb-4">{title}</h3>

    <!-- Pure CSS Grid layout -->
    <div
      class="grid gap-4"
      style={`grid-template-columns: repeat(${data.length}, 1fr);`}
    >
      {
        data.map((item, index) => {
          const heightPercent = (item.value / maxValue) * 100;
          const color = colors[index % colors.length];

          return (
            <div class="flex flex-col items-center gap-2">
              <!-- Bar container - grows from bottom -->
              <div
                class="w-full flex flex-col justify-end"
                style="height: 150px;"
              >
                <div
                  class="w-full rounded-t"
                  style={`height: ${heightPercent}%; background-color: ${color}; transition: height 400ms cubic-bezier(0.4, 0, 0.2, 1), background-color 400ms cubic-bezier(0.4, 0, 0.2, 1);`}
                >
                  <div class="text-xs text-white font-semibold text-center pt-1">
                    {item.value}
                  </div>
                </div>
              </div>
              <!-- Label below bar -->
              <div class="text-xs text-base-content text-center font-medium pt-3">
                {item.label}
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</div>

