---
import type {
  BoardCard,
  UsersList,
  TagItem,
  CardComment,
  User,
} from "../lib/api";
import EditPencil from "./icons/EditPencil.astro";
import CommentModal from "./modals/CommentModal.astro";

interface Props {
  card: BoardCard;
  users: UsersList;
  boardId: string;
}

const { card, users, boardId } = Astro.props;

const assignee = card.assigneeId
  ? users.find((u) => u.id === card.assigneeId)
  : null;
---

<article
  class="card bg-base-100 dark:bg-neutral shadow-lg cursor-grab active:cursor-grabbing transition-all duration-300 ease-in-out"
  data-card-id={card.id}
  data-draggable-card
  draggable="true"
>
  <div class="card-body gap-3 p-4">
    <div class="flex items-start justify-between gap-2">
      <h3 class="card-title text-lg text-base-content">{card.title}</h3>
      {
        card.completed && (
          <span class="badge badge-success badge-outline">Done</span>
        )
      }
      <button
        type="button"
        onclick={`window.kanban.openEditCardModal('${card.id}')`}
        class="btn btn-ghost btn-xs btn-circle"
      >
        <EditPencil />
      </button>
    </div>

    {
      card.assigneeId && (
        <div class="badge badge-outline badge-secondary badge-sm">
          Assigned to {assignee?.name ?? "Unassigned"}
        </div>
      )
    }

    {
      card.description && (
        <p class="text-sm text-base-content/70 bg-base-200 dark:bg-base-100 rounded-xl px-3 py-2">
          {card.description}
        </p>
      )
    }

    {
      card.tags.length > 0 && (
        <div class="flex flex-wrap gap-2.5 rounded-xl px-3 py-2 bg-base-200 dark:bg-base-100">
          {card.tags.map((tag: TagItem) => (
            <span
              class="badge border-0 shadow font-semibold text-white"
              style={`background-color: ${tag.color};`}
            >
              {tag.name}
            </span>
          ))}
        </div>
      )
    }

    {
      card.comments.length === 0 ? (
        <div class="flex items-center justify-between">
          <p class="text-xs font-semibold text-base-content/50">Comments</p>
          <button
            type="button"
            onclick={`document.getElementById('comment-modal-${card.id}').showModal()`}
            class="btn btn-ghost btn-xs btn-circle"
          >
            <svg
              class="w-4 h-4"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 4v16m8-8H4"
              />
            </svg>
          </button>
        </div>
      ) : (
        <div class="rounded-2xl bg-base-200 dark:bg-base-100 p-3 space-y-2 shadow-inner relative">
          <div class="flex items-center justify-between">
            <p class="text-xs font-semibold text-base-content/50">Comments</p>
            <button
              type="button"
              onclick={`document.getElementById('comment-modal-${card.id}').showModal()`}
              class="btn btn-ghost btn-xs btn-circle"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4v16m8-8H4"
                />
              </svg>
            </button>
          </div>
          <ul class="space-y-1 text-sm text-base-content/70">
            {card.comments.map((comment: CardComment) => {
              const commentUser = users.find(
                (u: User) => u.id === comment.userId
              );
              return (
                <li>
                  <span class="font-semibold text-base-content">
                    {commentUser?.name ?? "Unknown"}:
                  </span>{" "}
                  {comment.text}
                </li>
              );
            })}
          </ul>
        </div>
      )
    }
  </div>
</article>

<CommentModal
  card={card}
  users={users}
  boardId={boardId}
/>
